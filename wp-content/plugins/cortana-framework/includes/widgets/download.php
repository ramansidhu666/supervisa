<?php/** * Created by PhpStorm. * User: PhanLong * Date: 10/21/2015 * Time: 3:02 PM */class G5Plus_Widget_Download extends G5Plus_Widget {	public function __construct() {		$this->widget_cssclass    = 'widget-download';		$this->widget_description = __( "Download widget", 'cortana' );		$this->widget_id          = 'g5plus-download';		$this->widget_name        = __( 'G5Plus: Download file', 'cortana' );		$this->settings           = array(			'title'        => array(				'type'  => 'text',				'std'   => '',				'label' => __( 'Title', 'cortana' )			),			'display_text' => array(				'type'  => 'text',				'std'   => '',				'label' => __( 'Display Text ', 'cortana' )			),			'file_upload' => array(				'type'  => 'image',				'std'   => '',				'label' => __( 'File Upload ', 'cortana' )			),			'file_type'   => array(				'type'    => 'select',				'std'     => '',				'label'   => __( 'File Type', 'cortana' ),				'options' => array(					'doc' => __( 'DOC', 'cortana' ),					'xls' => __( 'XLS', 'cortana' ),					'pdf' => __( 'PDF', 'cortana' ),					'ppt' => __( 'PPT', 'cortana' )				)			),		);		parent::__construct();	}	function g5plus_get_attachment_id_by_url( $url ) {		// Split the $url into two parts with the wp-content directory as the separator		$parsed_url = explode( parse_url( WP_CONTENT_URL, PHP_URL_PATH ), $url );		// Get the host of the current site and the host of the $url, ignoring www		$this_host = str_ireplace( 'www.', '', parse_url( home_url(), PHP_URL_HOST ) );		$file_host = str_ireplace( 'www.', '', parse_url( $url, PHP_URL_HOST ) );		// Return nothing if there aren't any $url parts or if the current host and $url host do not match		if ( !isset( $parsed_url[1] ) || empty( $parsed_url[1] ) || ( $this_host != $file_host ) ) {			return;		}		// Now we're going to quickly search the DB for any attachment GUID with a partial path match		// Example: /uploads/2013/05/test-image.jpg		global $wpdb;		$attachment = $wpdb->get_col( $wpdb->prepare( "SELECT ID FROM {$wpdb->prefix}posts WHERE guid RLIKE %s;", $parsed_url[1] ) );		// Returns null if no attachment is found		return $attachment[0];	}	// Process download	function initdownload() {		$download1 = new g5plus_download();		return $download1->get_media_files_attachment();	}	function widget( $args, $instance ) {		if ( $this->get_cached_widget( $args ) ) {			return;		}		extract( $args, EXTR_SKIP );		$title        = ( !empty( $instance['title'] ) ) ? $instance['title'] : '';		$title        = apply_filters( 'widget_title', $title, $instance, $this->id_base );		$class_custom = empty( $instance['class_custom'] ) ? '' : apply_filters( 'widget_class_custom', $instance['class_custom'] );		$display_text = ( !empty( $instance['display_text'] ) ) ? $instance['display_text'] : '';		$file_upload  = ( !empty( $instance['file_upload'] ) ) ? $instance['file_upload'] : '';		$file_type    = ( !empty( $instance['file_type'] ) ) ? $instance['file_type'] : '';		$class = array( 'widget-download-wrap' );		if ( !empty( $class_custom ) ) {			$class[] = $class_custom;		}		if ( $file_type == 'doc' ) {			$icon_type = 'icon icon-doc2';		} elseif ( $file_type == 'xls' ) {			$icon_type = 'fa fa-file-excel-o';		} elseif ( $file_type = 'pdf' ) {			$icon_type = 'icon icon-pdf19';		} else {			$icon_type = 'icon icon-ppt';		}		if ( $display_text != '' ) {		} else {			$display_text = 'Download.' . $file_type . '';		}		require_once( 'download/download.php' );		$attachmentID = $this->g5plus_get_attachment_id_by_url( $file_upload );		$download     = new g5plus_download();		ob_start();		if ( $file_upload != '' ) {			?>			<?php $download_link = $download->get_media_downloader( $attachmentID ) ?>			<?php echo wp_kses_post( $args['before_widget'] ); ?>			<?php if ( $title ) {				echo wp_kses_post( $args['before_title'] . $title . $args['after_title'] );			} ?>			<div class="<?php echo join( ' ', $class ); ?>">				<a href="<?php echo wp_kses_post( $download_link ) ?>"><i class="<?php echo esc_attr( $icon_type ) ?>"></i><?php echo esc_html( $display_text ) ?>				</a>			</div>			<?php echo wp_kses_post( $args['after_widget'] ); ?>			<?php		}		$content = ob_get_clean();		echo wp_kses_post( $content );		$this->cache_widget( $args, $content );	}}if ( !function_exists( 'g5plus_register_widget_download' ) ) {	function g5plus_register_widget_download() {		register_widget( 'G5Plus_Widget_Download' );	}	add_action( 'widgets_init', 'g5plus_register_widget_download', 1 );}add_action( 'init', 'sfd_process_download', 10 );function sfd_process_download() {	if ( isset( $_GET['media_dl'] ) && !empty( $_GET['media_dl'] ) ) {		$media_file = $_GET['media_dl'];		$media_id = $_GET['media_dl'];		if ( (int) $media_id <= 0 ) {			return;		}		// grab the requested file's name		$file_name = get_attached_file( $media_id );		// make sure it's a file before doing anything!		if ( is_file( $file_name ) ) {			// required for IE & Safari			if ( ini_get( 'zlib.output_compression' ) ) {				ini_set( 'zlib.output_compression', 'Off' );			}			// get the file mime type using the file extension			switch ( strtolower( substr( strrchr( $file_name, '.' ), 1 ) ) ) {				case 'pdf':					$mime = 'application/pdf';					break;				case 'zip':					$mime = 'application/zip';					break;				case 'jpeg':				case 'jpg':					$mime = 'image/jpg';					break;				default:					$mime = 'application/force-download';			}			header( 'Pragma: public' );    // required			header( 'Expires: 0' );        // no cache			header( 'Cache-Control: must-revalidate, post-check=0, pre-check=0' );			header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s', @filemtime( $file_name ) ) . ' GMT' );			header( 'Cache-Control: private', false );			header( 'Content-Type: ' . $mime );			header( 'Content-Disposition: attachment; filename="' . basename( $file_name ) . '"' );			header( 'Content-Transfer-Encoding: binary' );			header( 'Content-Length: ' . @filesize( $file_name ) );    // provide file size			header( 'Connection: close' );			$this->readfileChunked( $file_name );        // push it out			die();		}	}}